#include "HX711.h"
#include <Arduino.h>
#if defined(ESP32)
  #include <WiFi.h>
#elif defined(ESP8266)
  #include <ESP8266WiFi.h>
#endif
#include <Firebase_ESP_Client.h>

#define calibration_factor 51360 //This value is obtained using the SparkFun_HX711_Calibration sketch
#define zero_factor 135995 //This large value is obtained using the SparkFun_HX711_Calibration sketch
#define LOADCELL_DOUT_PIN  13
#define LOADCELL_SCK_PIN  12

//Provide the token generation process info.
#include "addons/TokenHelper.h"
//Provide the RTDB payload printing info and other helper functions.
#include "addons/RTDBHelper.h"

// Insert your network credentials
#define WIFI_SSID "ReDRaN"
#define WIFI_PASSWORD "2444666668888888"

// Insert Firebase project API Key
#define API_KEY "AIzaSyA2NNXFYCaxzkvLqqnU2WPpf6t1-0_SWBo"

// Insert RTDB URLefine the RTDB URL */
#define DATABASE_URL "https://lpgmonitor-cc6d1-default-rtdb.firebaseio.com/" 

//Define Firebase Data object
FirebaseData fbdo;

FirebaseAuth auth;
FirebaseConfig config;
HX711 scale;

float reading;
unsigned long sendDataPrevMillis = 0;
bool signupOK = false;
float sensorValue = 0;
int controlvalue = 0;
float lpglevel;
byte MQ6_Pin = 39;          /* Define A0 for MQ Sensor Pin */
float Referance_V = 3300.0; /* ESP32 Referance Voltage in mV */
float RL = 1.0;             /* In Module RL value is 1k Ohm */
float Ro = 10.0;            /* The Ro value is 10k Ohm */
float mVolt = 0.0;
const float Ro_clean_air_factor = 10.0;


void setup() {
  Serial.begin(9600);       /* Set baudrate to 9600 */ 
  pinMode(MQ6_Pin, INPUT);
  


   
  scale.begin(LOADCELL_DOUT_PIN, LOADCELL_SCK_PIN);
  scale.set_scale(calibration_factor); //This value is obtained by using the SparkFun_HX711_Calibration sketch
  scale.set_offset(zero_factor);



  Serial.println("Wait for 30 sec warmup");
  delay(30000);             /* Set the warmup delay wich is 30 Sec */
  Serial.println("Warmup Complete");
  for(int i=0; i<30; i++){
    mVolt += Get_mVolt(MQ6_Pin);
  }
  mVolt = mVolt /30.0;      /* Get the volatage in mV for 30 Samples */
  Serial.print("Voltage at  Pin 39 = ");
  Serial.print(mVolt);
  Serial.println("mVolt");
  Serial.print("Rs = ");
  Serial.println(Calculate_Rs(mVolt));
  Ro = Calculate_Rs(mVolt) / Ro_clean_air_factor;
  Serial.print("Ro = ");
  Serial.println(Ro);
  Serial.println(" ");
  mVolt = 0.0;



  WiFi.begin(WIFI_SSID, WIFI_PASSWORD);
  Serial.print("Connecting to Wi-Fi");
  while (WiFi.status() != WL_CONNECTED){
    Serial.print(".");
    delay(100);
  }
  Serial.println();
  Serial.print("Connected with IP: ");
  Serial.println(WiFi.localIP());
  Serial.println();

  /* Assign the api key (required) */
  config.api_key = API_KEY;

  /* Assign the RTDB URL (required) */
  config.database_url = DATABASE_URL;

  /* Sign up */
  if (Firebase.signUp(&config, &auth, "", "")){
    Serial.println("ok");
    signupOK = true;
  }
  else{
    Serial.printf("%s\n", config.signer.signupError.message.c_str());
  }

  /* Assign the callback function for the long running token generation task */
  config.token_status_callback = tokenStatusCallback; //see addons/TokenHelper.h
  
  Firebase.begin(&config, &auth);
  Firebase.reconnectWiFi(true);
}
float Calculate_Rs(float Vo) {
/* 
 *  Calculate the Rs value
 *  The equation Rs = (Vc - Vo)*(RL/Vo)
 */
  float Rs = (Referance_V - Vo) * (RL / Vo); 
  return Rs;
}


unsigned int LPG_PPM(float RsRo_ratio) {
/*
 * Calculate the PPM using below equation
 * LPG ppm = [(Rs/Ro)/18.446]^(1/-0.421)
 */
  float ppm;
  ppm = pow((RsRo_ratio/18.446), (1/-0.421));
  return (unsigned int) ppm;
}


float Get_mVolt(byte AnalogPin) {
/* Calculate the ADC Voltage using below equation
 *  mVolt = ADC_Count * (ADC_Referance_Voltage / ADC_Resolution)
 */
  int ADC_Value = analogRead(AnalogPin); 
  delay(1);
  float mVolt = ADC_Value * (Referance_V / 4096.0);
  return mVolt;
}
void loop(){
  reading=scale.get_units(); //scale.get_units() returns a float
  lpglevel =0.45359237*reading;
  Serial.print(lpglevel);
  Serial.print("kg"); //You can change to kg but you'll need to change the calibration_factor
  Serial.println();
  scale.power_down(); //Put the HX711 in sleep mode
  delay(100);
  scale.power_up();
  delay(100);



  for(int i=0; i<500; i++){
    mVolt += Get_mVolt(MQ6_Pin);
  }
  mVolt = mVolt/500.0;      /* Get the volatage in mV for 500 Samples */
  float Rs = Calculate_Rs(mVolt);
  float Ratio_RsRo = Rs/Ro;
  Serial.print("LPG ppm = ");
  unsigned int LPG_ppm = LPG_PPM(Ratio_RsRo);
  Serial.println(LPG_ppm);   /* Print the Gas PPM value in Serial Monitor */



  if (Firebase.ready() && signupOK && (millis() - sendDataPrevMillis > 1500 || sendDataPrevMillis == 0)){
    sendDataPrevMillis = millis();
    // Write an Int number on the database path test/int
    Firebase.RTDB.setFloat(&fbdo, "hello/temp", LPG_ppm);
    Firebase.RTDB.setFloat(&fbdo, "varad/level", lpglevel);
    if (Firebase.RTDB.getInt(&fbdo, "/test/concen")) {
      if (fbdo.dataType() == "int") {
        controlvalue = fbdo.intData();
        Serial.print("Controlvalue =");
        Serial.println(controlvalue);
      }
    else {
      Serial.println(fbdo.errorReason());
    }
    }
  }
  Serial.println("");
  mVolt = 0.0; 
}
